digraph "0*n == 1*n" {
	node [shape=doublecircle]
	init_right
	HALT
	node [shape=circle]
	init_right -> goto_left [label="0/[ R"]
	init_right -> reset_finish [label="1/1 R"]
	goto_left -> goto_left [label="1/1 R"]
	goto_left -> goto_left [label="0/0 R"]
	goto_left -> init_left [label="./. L"]
	init_left -> find_0 [label="1/] L"]
	init_left -> reset_finish [label="[/0 R"]
	init_left -> reset_left [label="0/0 L"]
	find_0 -> find_0 [label="1/1 L"]
	find_0 -> find_0 [label="./. L"]
	find_0 -> kill_1 [label="0/0 R"]
	find_0 -> is_clear [label="[/[ R"]
	is_clear -> is_clear [label="./. R"]
	is_clear -> start_reset [label="]/] R"]
	is_clear -> reset_left [label="1/1 R"]
	start_reset -> reset_left [label="./y L"]
	kill_1 -> kill_0 [label="1/. L"]
	kill_1 -> kill_1 [label="./. R"]
	kill_1 -> reset_left [label="]/] L"]
	kill_0 -> find_0 [label="0/. L"]
	kill_0 -> kill_0 [label="./. L"]
	success_right -> success_right [label="1/1 R"]
	success_right -> success_right [label="0/0 R"]
	success_right -> success_right [label="./. R"]
	success_right -> start_reset [label="]/] R"]
	reset_left -> reset_left_l [label="./1 L"]
	reset_left -> reset_left [label="]/] L"]
	reset_left -> reset_left [label="1/1 L"]
	reset_left -> reset_left [label="0/0 L"]
	reset_left -> reset_finish [label="[/0 R"]
	reset_left_l -> reset_right [label="[/[ R"]
	reset_left_l -> reset_right [label="0/0 R"]
	reset_left_l -> reset_left_l [label="./. L"]
	reset_right -> reset_right_r [label="./0 R"]
	reset_right_r -> reset_right_r [label="./. R"]
	reset_right_r -> reset_right_r [label="1/1 R"]
	reset_right_r -> reset_left [label="]/] L"]
	reset_finish -> reset_finish [label="1/1 R"]
	reset_finish -> reset_finish [label="0/0 R"]
	reset_finish -> reset_finish [label="]/1 R"]
	reset_finish -> HALT [label="n/n R"]
	reset_finish -> HALT [label="./n L"]
	reset_finish -> HALT [label="y/y L"]
}
