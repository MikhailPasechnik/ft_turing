{
    "name": "pseudo_universal",
    "alphabet": [
        "&",
        "*",
        "^",
        "{",
        "}",
        "[",
        "]",
        "<",
        ">",
        "C",
        "S",
        "P",
        "H",
        "1",
        "+",
        ".",
        " "
    ],
    "blank": " ",
    "states": [
        "init",
        "goto-null-C",
        "goto-null-S",
        "goto-null-P",
        "goto-null-H",
        "goto-state-C",
        "goto-state-S",
        "goto-state-P",
        "goto-state-H",
        "init-find-C:1",
        "init-find-C:+",
        "init-find-C:.",
        "init-find-C: ",
        "init-find-S:1",
        "init-find-S:+",
        "init-find-S:.",
        "init-find-S: ",
        "init-find-P:1",
        "init-find-P:+",
        "init-find-P:.",
        "init-find-P: ",
        "init-find-H:1",
        "init-find-H:+",
        "init-find-H:.",
        "init-find-H: ",
        "find-state-C(1)",
        "find-state-C(+)",
        "find-state-C(.)",
        "find-state-C( )",
        "find-state-S(1)",
        "find-state-S(+)",
        "find-state-S(.)",
        "find-state-S( )",
        "find-state-P(1)",
        "find-state-P(+)",
        "find-state-P(.)",
        "find-state-P( )",
        "find-state-H(1)",
        "find-state-H(+)",
        "find-state-H(.)",
        "find-state-H( )",
        "check-op-C(1)",
        "check-op-C(+)",
        "check-op-C(.)",
        "check-op-C( )",
        "check-op-S(1)",
        "check-op-S(+)",
        "check-op-S(.)",
        "check-op-S( )",
        "check-op-P(1)",
        "check-op-P(+)",
        "check-op-P(.)",
        "check-op-P( )",
        "check-op-H(1)",
        "check-op-H(+)",
        "check-op-H(.)",
        "check-op-H( )",
        "cmp-read-C(1)",
        "cmp-read-C(+)",
        "cmp-read-C(.)",
        "cmp-read-C( )",
        "cmp-read-S(1)",
        "cmp-read-S(+)",
        "cmp-read-S(.)",
        "cmp-read-S( )",
        "cmp-read-P(1)",
        "cmp-read-P(+)",
        "cmp-read-P(.)",
        "cmp-read-P( )",
        "cmp-read-H(1)",
        "cmp-read-H(+)",
        "cmp-read-H(.)",
        "cmp-read-H( )",
        "get-state-1",
        "get-state-+",
        "get-state-.",
        "get-state- ",
        "get-dir-C",
        "get-dir-S",
        "get-dir-P",
        "get-dir-H",
        "get-write-C:<",
        "get-write-C:>",
        "get-write-S:<",
        "get-write-S:>",
        "get-write-P:<",
        "get-write-P:>",
        "get-write-H:<",
        "get-write-H:>",
        "to-next-trans-C(1)",
        "to-next-trans-C(+)",
        "to-next-trans-C(.)",
        "to-next-trans-C( )",
        "to-next-trans-S(1)",
        "to-next-trans-S(+)",
        "to-next-trans-S(.)",
        "to-next-trans-S( )",
        "to-next-trans-P(1)",
        "to-next-trans-P(+)",
        "to-next-trans-P(.)",
        "to-next-trans-P( )",
        "to-next-trans-H(1)",
        "to-next-trans-H(+)",
        "to-next-trans-H(.)",
        "to-next-trans-H( )",
        "eval-<(1)~C",
        "eval-<(+)~C",
        "eval-<(.)~C",
        "eval-<( )~C",
        "eval->(1)~C",
        "eval->(+)~C",
        "eval->(.)~C",
        "eval->( )~C",
        "eval-<(1)~S",
        "eval-<(+)~S",
        "eval-<(.)~S",
        "eval-<( )~S",
        "eval->(1)~S",
        "eval->(+)~S",
        "eval->(.)~S",
        "eval->( )~S",
        "eval-<(1)~P",
        "eval-<(+)~P",
        "eval-<(.)~P",
        "eval-<( )~P",
        "eval->(1)~P",
        "eval->(+)~P",
        "eval->(.)~P",
        "eval->( )~P",
        "eval-<(1)~H",
        "eval-<(+)~H",
        "eval-<(.)~H",
        "eval-<( )~H",
        "eval->(1)~H",
        "eval->(+)~H",
        "eval->(.)~H",
        "eval->( )~H",
        "HALT"
    ],
    "initial": "init",
    "finals": [
        "HALT"
    ],
    "transitions": {
        "init": [
            {
                "read": "C",
                "to_state": "goto-null-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "goto-null-S",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "goto-null-P",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-H",
                "write": "H",
                "action": "RIGHT"
            }
        ],
        "goto-null-C": [
            {
                "read": "&",
                "to_state": "goto-null-C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-C",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "goto-null-C",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "goto-null-C",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "goto-null-C",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "goto-state-C",
                "write": "*",
                "action": "RIGHT"
            }
        ],
        "goto-null-S": [
            {
                "read": "&",
                "to_state": "goto-null-S",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-S",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-S",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-S",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-S",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-S",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-S",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-S",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-S",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "goto-null-S",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "goto-null-S",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-S",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-S",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "goto-null-S",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-S",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-S",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "goto-state-S",
                "write": "*",
                "action": "RIGHT"
            }
        ],
        "goto-null-P": [
            {
                "read": "&",
                "to_state": "goto-null-P",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-P",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-P",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-P",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-P",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-P",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-P",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-P",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-P",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "goto-null-P",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "goto-null-P",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-P",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-P",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "goto-null-P",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-P",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-P",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "goto-state-P",
                "write": "*",
                "action": "RIGHT"
            }
        ],
        "goto-null-H": [
            {
                "read": "&",
                "to_state": "goto-null-H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-H",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "goto-null-H",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "goto-null-H",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "goto-null-H",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "goto-state-H",
                "write": "*",
                "action": "RIGHT"
            }
        ],
        "goto-state-C": [
            {
                "read": "1",
                "to_state": "init-find-C:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-C:+",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-S": [
            {
                "read": "1",
                "to_state": "init-find-S:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-S:+",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-S:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-S:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-P": [
            {
                "read": "1",
                "to_state": "init-find-P:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-P:+",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-P:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-P:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-H": [
            {
                "read": "1",
                "to_state": "HALT",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "HALT",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "HALT",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "HALT",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "init-find-C:1": [
            {
                "read": "1",
                "to_state": "init-find-C:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-C:1",
                "write": "+",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "*",
                "to_state": "init-find-C:1",
                "write": "*",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "S",
                "to_state": "init-find-C:1",
                "write": "S",
                "action": "LEFT"
            },
            {
                "read": "P",
                "to_state": "init-find-C:1",
                "write": "P",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-C:1",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:+": [
            {
                "read": "1",
                "to_state": "init-find-C:+",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-C:+",
                "write": "+",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:+",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:+",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "*",
                "to_state": "init-find-C:+",
                "write": "*",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:+",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:+",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:+",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:+",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:+",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:+",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:+",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:+",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "S",
                "to_state": "init-find-C:+",
                "write": "S",
                "action": "LEFT"
            },
            {
                "read": "P",
                "to_state": "init-find-C:+",
                "write": "P",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-C:+",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(+)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:.": [
            {
                "read": "1",
                "to_state": "init-find-C:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-C:.",
                "write": "+",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "*",
                "to_state": "init-find-C:.",
                "write": "*",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "S",
                "to_state": "init-find-C:.",
                "write": "S",
                "action": "LEFT"
            },
            {
                "read": "P",
                "to_state": "init-find-C:.",
                "write": "P",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-C:.",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C: ": [
            {
                "read": "1",
                "to_state": "init-find-C: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-C: ",
                "write": "+",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "*",
                "to_state": "init-find-C: ",
                "write": "*",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "S",
                "to_state": "init-find-C: ",
                "write": "S",
                "action": "LEFT"
            },
            {
                "read": "P",
                "to_state": "init-find-C: ",
                "write": "P",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-C: ",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-S:1": [
            {
                "read": "1",
                "to_state": "init-find-S:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-S:1",
                "write": "+",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-S:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-S:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "*",
                "to_state": "init-find-S:1",
                "write": "*",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-S:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-S:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-S:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-S:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-S:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-S:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-S:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-S:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "S",
                "to_state": "init-find-S:1",
                "write": "S",
                "action": "LEFT"
            },
            {
                "read": "P",
                "to_state": "init-find-S:1",
                "write": "P",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-S:1",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-S(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-S:+": [
            {
                "read": "1",
                "to_state": "init-find-S:+",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-S:+",
                "write": "+",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-S:+",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-S:+",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "*",
                "to_state": "init-find-S:+",
                "write": "*",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-S:+",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-S:+",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-S:+",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-S:+",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-S:+",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-S:+",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-S:+",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-S:+",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "S",
                "to_state": "init-find-S:+",
                "write": "S",
                "action": "LEFT"
            },
            {
                "read": "P",
                "to_state": "init-find-S:+",
                "write": "P",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-S:+",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-S(+)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-S:.": [
            {
                "read": "1",
                "to_state": "init-find-S:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-S:.",
                "write": "+",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-S:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-S:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "*",
                "to_state": "init-find-S:.",
                "write": "*",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-S:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-S:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-S:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-S:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-S:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-S:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-S:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-S:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "S",
                "to_state": "init-find-S:.",
                "write": "S",
                "action": "LEFT"
            },
            {
                "read": "P",
                "to_state": "init-find-S:.",
                "write": "P",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-S:.",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-S(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-S: ": [
            {
                "read": "1",
                "to_state": "init-find-S: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-S: ",
                "write": "+",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-S: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-S: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "*",
                "to_state": "init-find-S: ",
                "write": "*",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-S: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-S: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-S: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-S: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-S: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-S: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-S: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-S: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "S",
                "to_state": "init-find-S: ",
                "write": "S",
                "action": "LEFT"
            },
            {
                "read": "P",
                "to_state": "init-find-S: ",
                "write": "P",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-S: ",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-S( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-P:1": [
            {
                "read": "1",
                "to_state": "init-find-P:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-P:1",
                "write": "+",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-P:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-P:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "*",
                "to_state": "init-find-P:1",
                "write": "*",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-P:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-P:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-P:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-P:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-P:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-P:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-P:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-P:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "S",
                "to_state": "init-find-P:1",
                "write": "S",
                "action": "LEFT"
            },
            {
                "read": "P",
                "to_state": "init-find-P:1",
                "write": "P",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-P:1",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-P(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-P:+": [
            {
                "read": "1",
                "to_state": "init-find-P:+",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-P:+",
                "write": "+",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-P:+",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-P:+",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "*",
                "to_state": "init-find-P:+",
                "write": "*",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-P:+",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-P:+",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-P:+",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-P:+",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-P:+",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-P:+",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-P:+",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-P:+",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "S",
                "to_state": "init-find-P:+",
                "write": "S",
                "action": "LEFT"
            },
            {
                "read": "P",
                "to_state": "init-find-P:+",
                "write": "P",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-P:+",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-P(+)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-P:.": [
            {
                "read": "1",
                "to_state": "init-find-P:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-P:.",
                "write": "+",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-P:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-P:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "*",
                "to_state": "init-find-P:.",
                "write": "*",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-P:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-P:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-P:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-P:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-P:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-P:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-P:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-P:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "S",
                "to_state": "init-find-P:.",
                "write": "S",
                "action": "LEFT"
            },
            {
                "read": "P",
                "to_state": "init-find-P:.",
                "write": "P",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-P:.",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-P(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-P: ": [
            {
                "read": "1",
                "to_state": "init-find-P: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-P: ",
                "write": "+",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-P: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-P: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "*",
                "to_state": "init-find-P: ",
                "write": "*",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-P: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-P: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-P: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-P: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-P: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-P: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-P: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-P: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "S",
                "to_state": "init-find-P: ",
                "write": "S",
                "action": "LEFT"
            },
            {
                "read": "P",
                "to_state": "init-find-P: ",
                "write": "P",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-P: ",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-P( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-H:1": [
            {
                "read": "1",
                "to_state": "init-find-H:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-H:1",
                "write": "+",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-H:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-H:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "*",
                "to_state": "init-find-H:1",
                "write": "*",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-H:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-H:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-H:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-H:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-H:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-H:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-H:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-H:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "S",
                "to_state": "init-find-H:1",
                "write": "S",
                "action": "LEFT"
            },
            {
                "read": "P",
                "to_state": "init-find-H:1",
                "write": "P",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-H:1",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-H:+": [
            {
                "read": "1",
                "to_state": "init-find-H:+",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-H:+",
                "write": "+",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-H:+",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-H:+",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "*",
                "to_state": "init-find-H:+",
                "write": "*",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-H:+",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-H:+",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-H:+",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-H:+",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-H:+",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-H:+",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-H:+",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-H:+",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "S",
                "to_state": "init-find-H:+",
                "write": "S",
                "action": "LEFT"
            },
            {
                "read": "P",
                "to_state": "init-find-H:+",
                "write": "P",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-H:+",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(+)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-H:.": [
            {
                "read": "1",
                "to_state": "init-find-H:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-H:.",
                "write": "+",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-H:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-H:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "*",
                "to_state": "init-find-H:.",
                "write": "*",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-H:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-H:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-H:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-H:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-H:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-H:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-H:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-H:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "S",
                "to_state": "init-find-H:.",
                "write": "S",
                "action": "LEFT"
            },
            {
                "read": "P",
                "to_state": "init-find-H:.",
                "write": "P",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-H:.",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-H: ": [
            {
                "read": "1",
                "to_state": "init-find-H: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "+",
                "to_state": "init-find-H: ",
                "write": "+",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-H: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-H: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "*",
                "to_state": "init-find-H: ",
                "write": "*",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-H: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-H: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-H: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-H: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-H: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-H: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-H: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-H: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "S",
                "to_state": "init-find-H: ",
                "write": "S",
                "action": "LEFT"
            },
            {
                "read": "P",
                "to_state": "init-find-H: ",
                "write": "P",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-H: ",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-H( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "find-state-C(1)": [
            {
                "read": "1",
                "to_state": "find-state-C(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-C(1)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-C(1)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-C(1)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(1)",
                "write": "H",
                "action": "RIGHT"
            }
        ],
        "find-state-C(+)": [
            {
                "read": "1",
                "to_state": "find-state-C(+)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-C(+)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(+)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(+)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(+)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(+)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(+)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(+)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(+)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(+)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(+)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(+)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-C(+)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-C(+)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(+)",
                "write": "H",
                "action": "RIGHT"
            }
        ],
        "find-state-C(.)": [
            {
                "read": "1",
                "to_state": "find-state-C(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-C(.)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-C(.)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-C(.)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(.)",
                "write": "H",
                "action": "RIGHT"
            }
        ],
        "find-state-C( )": [
            {
                "read": "1",
                "to_state": "find-state-C( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-C( )",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-C( )",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-C( )",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C( )",
                "write": "H",
                "action": "RIGHT"
            }
        ],
        "find-state-S(1)": [
            {
                "read": "1",
                "to_state": "find-state-S(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-S(1)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-S(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-S(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-S(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-S(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-S(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-S(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-S(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-S(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-S(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-S(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "check-op-S(1)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-S(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-S(1)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-S(1)",
                "write": "H",
                "action": "RIGHT"
            }
        ],
        "find-state-S(+)": [
            {
                "read": "1",
                "to_state": "find-state-S(+)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-S(+)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-S(+)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-S(+)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-S(+)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-S(+)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-S(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-S(+)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-S(+)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-S(+)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-S(+)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-S(+)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "check-op-S(+)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-S(+)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-S(+)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-S(+)",
                "write": "H",
                "action": "RIGHT"
            }
        ],
        "find-state-S(.)": [
            {
                "read": "1",
                "to_state": "find-state-S(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-S(.)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-S(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-S(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-S(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-S(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-S(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-S(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-S(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-S(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-S(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-S(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "check-op-S(.)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-S(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-S(.)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-S(.)",
                "write": "H",
                "action": "RIGHT"
            }
        ],
        "find-state-S( )": [
            {
                "read": "1",
                "to_state": "find-state-S( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-S( )",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-S( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-S( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-S( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-S( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-S( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-S( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-S( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-S( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-S( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-S( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "check-op-S( )",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-S( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-S( )",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-S( )",
                "write": "H",
                "action": "RIGHT"
            }
        ],
        "find-state-P(1)": [
            {
                "read": "1",
                "to_state": "find-state-P(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-P(1)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-P(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-P(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-P(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-P(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-P(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-P(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-P(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-P(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-P(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-P(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "check-op-P(1)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-P(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-P(1)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-P(1)",
                "write": "H",
                "action": "RIGHT"
            }
        ],
        "find-state-P(+)": [
            {
                "read": "1",
                "to_state": "find-state-P(+)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-P(+)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-P(+)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-P(+)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-P(+)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-P(+)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-P(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-P(+)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-P(+)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-P(+)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-P(+)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-P(+)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "check-op-P(+)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-P(+)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-P(+)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-P(+)",
                "write": "H",
                "action": "RIGHT"
            }
        ],
        "find-state-P(.)": [
            {
                "read": "1",
                "to_state": "find-state-P(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-P(.)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-P(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-P(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-P(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-P(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-P(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-P(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-P(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-P(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-P(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-P(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "check-op-P(.)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-P(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-P(.)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-P(.)",
                "write": "H",
                "action": "RIGHT"
            }
        ],
        "find-state-P( )": [
            {
                "read": "1",
                "to_state": "find-state-P( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-P( )",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-P( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-P( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-P( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-P( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-P( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-P( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-P( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-P( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-P( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-P( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "check-op-P( )",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-P( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-P( )",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-P( )",
                "write": "H",
                "action": "RIGHT"
            }
        ],
        "find-state-H(1)": [
            {
                "read": "1",
                "to_state": "find-state-H(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-H(1)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "check-op-H(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-H(1)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-H(1)",
                "write": "P",
                "action": "RIGHT"
            }
        ],
        "find-state-H(+)": [
            {
                "read": "1",
                "to_state": "find-state-H(+)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-H(+)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(+)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(+)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(+)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(+)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(+)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(+)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(+)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(+)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(+)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "check-op-H(+)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(+)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-H(+)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-H(+)",
                "write": "P",
                "action": "RIGHT"
            }
        ],
        "find-state-H(.)": [
            {
                "read": "1",
                "to_state": "find-state-H(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-H(.)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "check-op-H(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-H(.)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-H(.)",
                "write": "P",
                "action": "RIGHT"
            }
        ],
        "find-state-H( )": [
            {
                "read": "1",
                "to_state": "find-state-H( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-H( )",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "check-op-H( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-H( )",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-H( )",
                "write": "P",
                "action": "RIGHT"
            }
        ],
        "check-op-C(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "find-state-C(1)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-C(1)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-C(1)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-C(1)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(+)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(+)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "find-state-C(+)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(+)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(+)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(+)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(+)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(+)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(+)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(+)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-C(+)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-C(+)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(+)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(+)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-C(+)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(+)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(+)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "find-state-C(.)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-C(.)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-C(.)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-C(.)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C( )": [
            {
                "read": "{",
                "to_state": "cmp-read-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "find-state-C( )",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-C( )",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-C( )",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-C( )",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-S(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-S(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-S(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "find-state-S(1)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-S(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-S(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-S(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-S(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-S(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-S(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-S(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-S(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-S(1)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-S(1)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-S(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-S(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-S(1)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-S(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-S(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-S(+)": [
            {
                "read": "{",
                "to_state": "cmp-read-S(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-S(+)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "find-state-S(+)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-S(+)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-S(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-S(+)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-S(+)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-S(+)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-S(+)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-S(+)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-S(+)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-S(+)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-S(+)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-S(+)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-S(+)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-S(+)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-S(+)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-S(+)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-S(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-S(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-S(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "find-state-S(.)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-S(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-S(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-S(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-S(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-S(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-S(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-S(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-S(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-S(.)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-S(.)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-S(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-S(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-S(.)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-S(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-S(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-S( )": [
            {
                "read": "{",
                "to_state": "cmp-read-S( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-S( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "find-state-S( )",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-S( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-S( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-S( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-S( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-S( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-S( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-S( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-S( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-S( )",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-S( )",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-S( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-S( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-S( )",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-S( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-S( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-P(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-P(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-P(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "find-state-P(1)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-P(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-P(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-P(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-P(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-P(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-P(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-P(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-P(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-P(1)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-P(1)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-P(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-P(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-P(1)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-P(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-P(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-P(+)": [
            {
                "read": "{",
                "to_state": "cmp-read-P(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-P(+)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "find-state-P(+)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-P(+)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-P(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-P(+)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-P(+)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-P(+)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-P(+)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-P(+)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-P(+)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-P(+)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-P(+)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-P(+)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-P(+)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-P(+)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-P(+)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-P(+)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-P(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-P(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-P(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "find-state-P(.)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-P(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-P(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-P(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-P(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-P(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-P(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-P(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-P(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-P(.)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-P(.)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-P(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-P(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-P(.)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-P(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-P(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-P( )": [
            {
                "read": "{",
                "to_state": "cmp-read-P( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-P( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "find-state-P( )",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-P( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-P( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-P( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-P( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-P( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-P( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-P( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-P( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-P( )",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-P( )",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-P( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-P( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-P( )",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-P( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-P( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-H(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-H(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "find-state-H(1)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-H(1)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-H(1)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-H(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-H(1)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-H(+)": [
            {
                "read": "{",
                "to_state": "cmp-read-H(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(+)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "find-state-H(+)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(+)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(+)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(+)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(+)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(+)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(+)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(+)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-H(+)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-H(+)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-H(+)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H(+)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-H(+)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(+)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(+)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-H(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-H(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "find-state-H(.)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-H(.)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-H(.)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-H(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-H(.)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-H( )": [
            {
                "read": "{",
                "to_state": "cmp-read-H( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "find-state-H( )",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "find-state-H( )",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "find-state-H( )",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-H( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "find-state-H( )",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-C(1)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-C(1)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-C(1)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-C(1)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(+)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(+)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "get-state-+",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(+)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-C(+)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(+)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(+)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(+)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(+)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(+)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-C(+)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-C(+)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(+)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(+)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(+)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(+)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-C(.)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-C(.)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-C(.)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-C(.)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C( )": [
            {
                "read": "[",
                "to_state": "cmp-read-C( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-C( )",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-C( )",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-C( )",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-C( )",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C( )",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "cmp-read-S(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-S(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-S(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-S(1)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-S(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-S(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-S(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-S(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-S(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-S(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-S(1)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-S(1)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-S(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-S(1)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-S(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-S(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-S(+)": [
            {
                "read": "[",
                "to_state": "cmp-read-S(+)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "get-state-+",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-S(+)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-S(+)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-S(+)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-S(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-S(+)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-S(+)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-S(+)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-S(+)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-S(+)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-S(+)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-S(+)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-S(+)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-S(+)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-S(+)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-S(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-S(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-S(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-S(.)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-S(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-S(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-S(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-S(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-S(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-S(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-S(.)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-S(.)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-S(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-S(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-S(.)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-S(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-S( )": [
            {
                "read": "[",
                "to_state": "cmp-read-S( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-S( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-S( )",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-S( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-S( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-S( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-S( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-S( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-S( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-S( )",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-S( )",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-S( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-S( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-S( )",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-S( )",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "cmp-read-P(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-P(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-P(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-P(1)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-P(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-P(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-P(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-P(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-P(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-P(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-P(1)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-P(1)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-P(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-P(1)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-P(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-P(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-P(+)": [
            {
                "read": "[",
                "to_state": "cmp-read-P(+)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "get-state-+",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-P(+)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-P(+)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-P(+)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-P(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-P(+)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-P(+)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-P(+)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-P(+)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-P(+)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-P(+)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-P(+)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-P(+)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-P(+)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-P(+)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-P(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-P(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-P(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-P(.)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-P(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-P(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-P(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-P(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-P(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-P(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-P(.)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-P(.)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-P(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-P(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-P(.)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-P(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-P( )": [
            {
                "read": "[",
                "to_state": "cmp-read-P( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-P( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-P( )",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-P( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-P( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-P( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-P( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-P( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-P( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-P( )",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-P( )",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-P( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-P( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-P( )",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-P( )",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "cmp-read-H(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-H(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-H(1)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-H(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-H(1)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-H(1)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-H(1)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-H(+)": [
            {
                "read": "[",
                "to_state": "cmp-read-H(+)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "get-state-+",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(+)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-H(+)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(+)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-H(+)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(+)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(+)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(+)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-H(+)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-H(+)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(+)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H(+)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H(+)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(+)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-H(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-H(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-H(.)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-H(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-H(.)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-H(.)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-H(.)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-H( )": [
            {
                "read": "[",
                "to_state": "cmp-read-H( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-H( )",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-H( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-H( )",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-H( )",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-H( )",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H( )",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "get-state-1": [
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "get-dir-S",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "get-dir-P",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "get-dir-H",
                "write": "H",
                "action": "RIGHT"
            }
        ],
        "get-state-+": [
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "get-dir-S",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "get-dir-P",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "get-dir-H",
                "write": "H",
                "action": "RIGHT"
            }
        ],
        "get-state-.": [
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "get-dir-S",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "get-dir-P",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "get-dir-H",
                "write": "H",
                "action": "RIGHT"
            }
        ],
        "get-state- ": [
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "get-dir-S",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "get-dir-P",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "get-dir-H",
                "write": "H",
                "action": "RIGHT"
            }
        ],
        "get-dir-C": [
            {
                "read": "<",
                "to_state": "get-write-C:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-C:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-S": [
            {
                "read": "<",
                "to_state": "get-write-S:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-S:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-P": [
            {
                "read": "<",
                "to_state": "get-write-P:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-P:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-H": [
            {
                "read": "<",
                "to_state": "get-write-H:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-H:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-write-C:<": [
            {
                "read": "1",
                "to_state": "eval-<(1)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<(+)~C",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~C",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-C:>": [
            {
                "read": "1",
                "to_state": "eval->(1)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->(+)~C",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~C",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-S:<": [
            {
                "read": "1",
                "to_state": "eval-<(1)~S",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<(+)~S",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~S",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~S",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-S:>": [
            {
                "read": "1",
                "to_state": "eval->(1)~S",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->(+)~S",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~S",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~S",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-P:<": [
            {
                "read": "1",
                "to_state": "eval-<(1)~P",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<(+)~P",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~P",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~P",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-P:>": [
            {
                "read": "1",
                "to_state": "eval->(1)~P",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->(+)~P",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~P",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~P",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-H:<": [
            {
                "read": "1",
                "to_state": "eval-<(1)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<(+)~H",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~H",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-H:>": [
            {
                "read": "1",
                "to_state": "eval->(1)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->(+)~H",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~H",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-C(1)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-C(1)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-C(1)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-C(1)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(+)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(+)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(+)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-C(+)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(+)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(+)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(+)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(+)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(+)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-C(+)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-C(+)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(+)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(+)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-C(+)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(+)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(+)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-C(.)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-C(.)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-C(.)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-C(.)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C( )": [
            {
                "read": "]",
                "to_state": "cmp-read-C( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-C( )",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-C( )",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-C( )",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-C( )",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-S(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-S(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-S(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-S(1)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-S(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-S(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-S(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-S(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-S(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-S(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-S(1)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-S(1)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-S(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-S(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-S(1)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-S(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-S(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-S(+)": [
            {
                "read": "]",
                "to_state": "cmp-read-S(+)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-S(+)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-S(+)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-S(+)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-S(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-S(+)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-S(+)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-S(+)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-S(+)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-S(+)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-S(+)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-S(+)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-S(+)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-S(+)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-S(+)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-S(+)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-S(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-S(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-S(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-S(.)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-S(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-S(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-S(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-S(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-S(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-S(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-S(.)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-S(.)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-S(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-S(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-S(.)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-S(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-S(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-S( )": [
            {
                "read": "]",
                "to_state": "cmp-read-S( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-S( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-S( )",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-S( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-S( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-S( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-S( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-S( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-S( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-S( )",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-S( )",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-S( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-S( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-S( )",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-S( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-S( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-P(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-P(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-P(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-P(1)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-P(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-P(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-P(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-P(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-P(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-P(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-P(1)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-P(1)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-P(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-P(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-P(1)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-P(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-P(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-P(+)": [
            {
                "read": "]",
                "to_state": "cmp-read-P(+)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-P(+)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-P(+)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-P(+)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-P(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-P(+)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-P(+)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-P(+)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-P(+)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-P(+)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-P(+)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-P(+)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-P(+)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-P(+)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-P(+)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-P(+)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-P(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-P(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-P(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-P(.)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-P(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-P(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-P(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-P(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-P(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-P(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-P(.)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-P(.)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-P(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-P(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-P(.)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-P(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-P(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-P( )": [
            {
                "read": "]",
                "to_state": "cmp-read-P( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-P( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-P( )",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-P( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-P( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-P( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-P( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-P( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-P( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-P( )",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-P( )",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-P( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-P( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-P( )",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-P( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-P( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-H(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-H(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-H(1)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-H(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-H(1)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-H(1)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-H(1)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-H(+)": [
            {
                "read": "]",
                "to_state": "cmp-read-H(+)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(+)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-H(+)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(+)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(+)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-H(+)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(+)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(+)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(+)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-H(+)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-H(+)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(+)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H(+)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-H(+)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H(+)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(+)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-H(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-H(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-H(.)",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-H(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-H(.)",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-H(.)",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-H(.)",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-H( )": [
            {
                "read": "]",
                "to_state": "cmp-read-H( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "to-next-trans-H( )",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-H( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "to-next-trans-H( )",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "to-next-trans-H( )",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "to-next-trans-H( )",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(1)~C": [
            {
                "read": "&",
                "to_state": "eval-<(1)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval-<(1)~C",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval-<(1)~C",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval-<(1)~C",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(1)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<(1)~C",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(+)~C": [
            {
                "read": "&",
                "to_state": "eval-<(+)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval-<(+)~C",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(+)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(+)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(+)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(+)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(+)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(+)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(+)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval-<(+)~C",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval-<(+)~C",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(+)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(+)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<(+)~C",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(+)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(+)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "+",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~C": [
            {
                "read": "&",
                "to_state": "eval-<(.)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval-<(.)~C",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval-<(.)~C",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval-<(.)~C",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(.)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<(.)~C",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<( )~C": [
            {
                "read": "&",
                "to_state": "eval-<( )~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval-<( )~C",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval-<( )~C",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval-<( )~C",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<( )~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<( )~C",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(1)~C": [
            {
                "read": "&",
                "to_state": "eval->(1)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval->(1)~C",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval->(1)~C",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval->(1)~C",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(1)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->(1)~C",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(+)~C": [
            {
                "read": "&",
                "to_state": "eval->(+)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval->(+)~C",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(+)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(+)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(+)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(+)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(+)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(+)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(+)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval->(+)~C",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval->(+)~C",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(+)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(+)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->(+)~C",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(+)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(+)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "+",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~C": [
            {
                "read": "&",
                "to_state": "eval->(.)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval->(.)~C",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval->(.)~C",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval->(.)~C",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(.)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->(.)~C",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->( )~C": [
            {
                "read": "&",
                "to_state": "eval->( )~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval->( )~C",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval->( )~C",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval->( )~C",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->( )~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->( )~C",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(1)~S": [
            {
                "read": "&",
                "to_state": "eval-<(1)~S",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval-<(1)~S",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~S",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~S",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~S",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~S",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~S",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~S",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~S",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval-<(1)~S",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval-<(1)~S",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(1)~S",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~S",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<(1)~S",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~S",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~S",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-S",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(+)~S": [
            {
                "read": "&",
                "to_state": "eval-<(+)~S",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval-<(+)~S",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(+)~S",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(+)~S",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(+)~S",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(+)~S",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(+)~S",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(+)~S",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(+)~S",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval-<(+)~S",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval-<(+)~S",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(+)~S",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(+)~S",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<(+)~S",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(+)~S",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(+)~S",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-S",
                "write": "+",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~S": [
            {
                "read": "&",
                "to_state": "eval-<(.)~S",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval-<(.)~S",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~S",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~S",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~S",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~S",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~S",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~S",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~S",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval-<(.)~S",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval-<(.)~S",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(.)~S",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~S",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<(.)~S",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~S",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~S",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-S",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<( )~S": [
            {
                "read": "&",
                "to_state": "eval-<( )~S",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval-<( )~S",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~S",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~S",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~S",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~S",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~S",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~S",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~S",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval-<( )~S",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval-<( )~S",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<( )~S",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~S",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<( )~S",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~S",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~S",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-S",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(1)~S": [
            {
                "read": "&",
                "to_state": "eval->(1)~S",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval->(1)~S",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~S",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~S",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~S",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~S",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~S",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~S",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~S",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval->(1)~S",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval->(1)~S",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(1)~S",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~S",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->(1)~S",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~S",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~S",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-S",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(+)~S": [
            {
                "read": "&",
                "to_state": "eval->(+)~S",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval->(+)~S",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(+)~S",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(+)~S",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(+)~S",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(+)~S",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(+)~S",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(+)~S",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(+)~S",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval->(+)~S",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval->(+)~S",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(+)~S",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(+)~S",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->(+)~S",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(+)~S",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(+)~S",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-S",
                "write": "+",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~S": [
            {
                "read": "&",
                "to_state": "eval->(.)~S",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval->(.)~S",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~S",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~S",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~S",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~S",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~S",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~S",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~S",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval->(.)~S",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval->(.)~S",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(.)~S",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~S",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->(.)~S",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~S",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~S",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-S",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->( )~S": [
            {
                "read": "&",
                "to_state": "eval->( )~S",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval->( )~S",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~S",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~S",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~S",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~S",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~S",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~S",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~S",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval->( )~S",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval->( )~S",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->( )~S",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~S",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->( )~S",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~S",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~S",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-S",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(1)~P": [
            {
                "read": "&",
                "to_state": "eval-<(1)~P",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval-<(1)~P",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~P",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~P",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~P",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~P",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~P",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~P",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~P",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval-<(1)~P",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval-<(1)~P",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(1)~P",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~P",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<(1)~P",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~P",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~P",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-P",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(+)~P": [
            {
                "read": "&",
                "to_state": "eval-<(+)~P",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval-<(+)~P",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(+)~P",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(+)~P",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(+)~P",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(+)~P",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(+)~P",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(+)~P",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(+)~P",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval-<(+)~P",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval-<(+)~P",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(+)~P",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(+)~P",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<(+)~P",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(+)~P",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(+)~P",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-P",
                "write": "+",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~P": [
            {
                "read": "&",
                "to_state": "eval-<(.)~P",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval-<(.)~P",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~P",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~P",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~P",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~P",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~P",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~P",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~P",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval-<(.)~P",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval-<(.)~P",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(.)~P",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~P",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<(.)~P",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~P",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~P",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-P",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<( )~P": [
            {
                "read": "&",
                "to_state": "eval-<( )~P",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval-<( )~P",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~P",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~P",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~P",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~P",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~P",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~P",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~P",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval-<( )~P",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval-<( )~P",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<( )~P",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~P",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<( )~P",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~P",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~P",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-P",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(1)~P": [
            {
                "read": "&",
                "to_state": "eval->(1)~P",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval->(1)~P",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~P",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~P",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~P",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~P",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~P",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~P",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~P",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval->(1)~P",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval->(1)~P",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(1)~P",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~P",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->(1)~P",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~P",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~P",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-P",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(+)~P": [
            {
                "read": "&",
                "to_state": "eval->(+)~P",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval->(+)~P",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(+)~P",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(+)~P",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(+)~P",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(+)~P",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(+)~P",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(+)~P",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(+)~P",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval->(+)~P",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval->(+)~P",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(+)~P",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(+)~P",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->(+)~P",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(+)~P",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(+)~P",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-P",
                "write": "+",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~P": [
            {
                "read": "&",
                "to_state": "eval->(.)~P",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval->(.)~P",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~P",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~P",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~P",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~P",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~P",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~P",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~P",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval->(.)~P",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval->(.)~P",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(.)~P",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~P",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->(.)~P",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~P",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~P",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-P",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->( )~P": [
            {
                "read": "&",
                "to_state": "eval->( )~P",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval->( )~P",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~P",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~P",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~P",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~P",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~P",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~P",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~P",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval->( )~P",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval->( )~P",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->( )~P",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~P",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->( )~P",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~P",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~P",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-P",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(1)~H": [
            {
                "read": "&",
                "to_state": "eval-<(1)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval-<(1)~H",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval-<(1)~H",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval-<(1)~H",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(1)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<(1)~H",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(+)~H": [
            {
                "read": "&",
                "to_state": "eval-<(+)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval-<(+)~H",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(+)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(+)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(+)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(+)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(+)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(+)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(+)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval-<(+)~H",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval-<(+)~H",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(+)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(+)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<(+)~H",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(+)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(+)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": "+",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~H": [
            {
                "read": "&",
                "to_state": "eval-<(.)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval-<(.)~H",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval-<(.)~H",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval-<(.)~H",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(.)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<(.)~H",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<( )~H": [
            {
                "read": "&",
                "to_state": "eval-<( )~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval-<( )~H",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval-<( )~H",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval-<( )~H",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<( )~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval-<( )~H",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(1)~H": [
            {
                "read": "&",
                "to_state": "eval->(1)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval->(1)~H",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval->(1)~H",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval->(1)~H",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(1)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->(1)~H",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(+)~H": [
            {
                "read": "&",
                "to_state": "eval->(+)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval->(+)~H",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(+)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(+)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(+)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(+)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(+)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(+)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(+)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval->(+)~H",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval->(+)~H",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(+)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(+)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->(+)~H",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(+)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(+)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": "+",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~H": [
            {
                "read": "&",
                "to_state": "eval->(.)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval->(.)~H",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval->(.)~H",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval->(.)~H",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(.)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->(.)~H",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->( )~H": [
            {
                "read": "&",
                "to_state": "eval->( )~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "*",
                "to_state": "eval->( )~H",
                "write": "*",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "S",
                "to_state": "eval->( )~H",
                "write": "S",
                "action": "RIGHT"
            },
            {
                "read": "P",
                "to_state": "eval->( )~H",
                "write": "P",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->( )~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "+",
                "to_state": "eval->( )~H",
                "write": "+",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": " ",
                "action": "RIGHT"
            }
        ]
    }
}
